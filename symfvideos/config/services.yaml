# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
      videos_directory: '%kernel.project_dir%/public/files'
      download_directory: '../public/files/'
      admin_email: 'slavuflorina@yahoo.com'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $global_parameter: 'Global parameter'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

   # app.myservice:
     #   class: App\Services\MyService
     #   arguments:
    #             $param: 'some parameter'
    #    public: true

 #   App\Services\MyService: '@app.myservice'
   #  App\Services\MyService:
       # arguments:
               # $param: 'some parameter'
                #$admin_email: '%admin_email%'
               # $service: '@App\Services\MySecondService'

       # properties:
           #     my: '@App\Services\MySecondService'
          #      logger: '@monolog.logger'


   # App\Services\MySecondService:
    #    lazy: true

    #App\Services\MyService:
       #  tags:
      #      - { name: doctrine.event_listener, event: postFlush }
      #      - { name: kernel.cache_clearer }
    App\Services\ServiceInterface: '@App\Services\MyService'


    #App\Listeners\VideoCreatedListener:
    #    tags:
      #      - { name: kernel.event_listener, event: video.created.event, method: onVideoCreatedEvent }
     #     #      - { name: kernel.cache_clearer }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
